const Unfold = (() => { function e(e, t, n) { e.style.transitionProperty = "height, margin, padding", e.style.transitionDuration = t + "ms", e.style.overflow = "hidden", e.style.height = t; setTimeout(() => { n && n(), e.style.removeProperty("height"), e.style.removeProperty("overflow"), e.style.removeProperty("transition-duration"), e.style.removeProperty("transition-property") }, t) } function t(t, n = 300) { const r = t.offsetHeight + "px"; t.style.height = r, t.offsetHeight, e(t, "0px", n, () => { t.style.display = "none", t.style.paddingTop = 0, t.style.paddingBottom = 0, t.style.marginTop = 0, t.style.marginBottom = 0, t.style.removeProperty("padding-top"), t.style.removeProperty("padding-bottom"), t.style.removeProperty("margin-top"), t.style.removeProperty("margin-bottom") }) } function n(e, n = 300) { e.style.removeProperty("display"); let r = getComputedStyle(e).display; "none" === r && (r = "block"), e.style.display = r, e.style.paddingTop = "", e.style.paddingBottom = "", e.style.marginTop = "", e.style.marginBottom = ""; let o = e.offsetHeight + "px"; e.style.height = "0px", e.offsetHeight, e(e, o, n) } function r(e, n = 300) { getComputedStyle(e).display === "none" ? n(e, n) : t(e, n) } function o(o, a = 300) { document.querySelectorAll(o).forEach(s => { s.addEventListener("click", () => { const c = s.querySelector(".content"); c && r(c, a) }) }) } return { up: t, down: n, toggle: r, bind: o } })(); export default Unfold;
